% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lvr_solve.R
\name{trajlvr}
\alias{trajlvr}
\title{Solver for a system of coupled first-order differential equations}
\usage{
trajlvr(Lvr1, Lvr2, step_t = 1e-04, Times = 100, noise = 0, m = 0, s = 1)
}
\arguments{
\item{Lvr1, Lvr2}{An object of class \code{lvr}.}

\item{step_t}{A numeric value for a short period of time (Î”t).}

\item{Times}{A numeric value of iterations.}

\item{noise}{A numeric value indicating the weight or proportion of noise to apply.}

\item{m}{A numeric value for the vector of means to generate noise.}

\item{s}{A numeric value for the vector of standard deviations to generate noise.}
}
\value{
A matrix with columns representing time, trajectory, and the changing rate of the trajectory.
}
\description{
S3 method for class \code{lvr}, simulating the trajectory of a two-variable dynamical system using the Euler method.
}
\details{
This function numerically solves a system of coupled first-order differential equations
defined by two \code{lvr} objects (\code{Lvr1} and \code{Lvr2}), each representing a variable's dynamics.
The simulation uses the Euler integration method with a small time step (\code{step_t}) and a specified number of iterations (\code{Times}).

At each time step, the change in each variable (\code{dl1} and \code{dl2}) is computed using user-supplied self and other influence functions
(\code{lvsef} and \code{lvoth} within each \code{lvr} object), optionally adding Gaussian noise controlled by parameters \code{noise}, \code{m}, and \code{s}.

The Euler update is applied as:
\deqn{x(t + \Delta t) = x(t) + \Delta x = x(t) + f(x(t)) \cdot \Delta t}
where \eqn{f(x(t))} is the rate of change at time \eqn{t}, defined by the combination of self- and cross-variable dynamics plus noise.

The returned matrix has five columns:
\itemize{
  \item \code{t}: Time steps
  \item \code{lv1}, \code{lv2}: Variable trajectories
  \item \code{dl1}, \code{dl2}: Their corresponding rate of change at each time step
}
}
\examples{
R = lvrCreate(Name = "Romeo", Inilv = 1,
              Lvsef = function(x, y) {5 * y - .97 * x * y},
              Lvoth = function(x, y) {1.2 * y})
J = lvrCreate(Name = "Juliet", Inilv = 0.5,
              Lvsef = function(x, y) {-3 * y + 1.01 * x * y},
              Lvoth = function(x, y) {-1.1 * y})
library(ggplot2)
df = trajlvr(R, J, step_t = 0.01, Times = 700)
df = as.data.frame(df)

p = ggplot(df, aes(x = lv1, y = lv2)) + geom_path() +
  annotate("segment", x = df$lv1[nrow(df)], y = df$lv2[nrow(df)],
           xend = df$lv1[nrow(df)] + df$dl1[nrow(df)] * 0.01,
           yend = df$lv2[nrow(df)] + df$dl2[nrow(df)] * 0.01,
           arrow = arrow(length = unit(.5 , "cm")), color = "red") +
  xlab("R") + ylab("J") +
  theme_bw()
p

df = trajlvr(Lvr1 = R, Lvr2 = J, step_t = 0.01, Times = 700, noise = 1.1, m = 0.5, s = 2)
df = reshape2::melt(as.data.frame(df), id.vars = 't', measure.vars = c('lv1', 'lv2'))

p = ggplot(df, aes(x = t, y = value)) +
  geom_path(aes(color = variable)) +
  scale_color_manual(name = ' ',
                     breaks = c('lv1', 'lv2'),
                     values = c("blue", "red"),
                     label = c('R', 'J')) +
  xlab("t") + ylab("Lv") +
  theme_bw()
p

}
